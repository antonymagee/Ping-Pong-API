swagger: '2.0'

info:
  version: 1.0.0
  title: title
  description: description
  termsOfService: terms
  contact:
    name: Antony Magee
    email: antony.magee@gmail.com
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
schemes: 
  - http
host: localhost
basePath: /api/
paths:
  /games:
    get:
      summary: Gets all games
      description: Returns a list of all played games.
      responses:
        200:
          description: A list of all played games
          schema:
            type: array
            items:
              required:
                - Player1
                - Player2
              properties:
                Id:
                  type: integer
                Player1:
                  type: string
                Player2:
                  type: string
                Player3:
                  type: string
                Player4:
                  type: string  
                Score1:
                  type: integer
                Score2:
                  type: integer
                Time:
                  type: string
                  format: date-time
    post:
      summary: Adds new game to list
      description: Adds all the information for recording a new game
      responses:
        200:
          description: OK
      parameters:
       - name: Player1
         in: query
         description: Player 1 name
         type: string
         required: true
       - name: Player2
         in: query
         description: Player 2 name
         type: string
         required: true
       - name: Player3
         in: query
         description: Player 3 name
         type: string
       - name: Player4
         in: query
         description: Player 4 name
         type: string
       - name: Score1
         in: query
         description: The score for Player 1 ( also Player 1 and Player 2 when playing Doubles) 
         type: integer
       - name: Score2
         in: query
         description: The score for Player 2 ( also Player 3 and Player 4 when playing Doubles) 
         type: integer 
    
    
      
  /games/{id}:
    put:
      summary: Updates game by Id
      description: Updates the supplied values for a specific game by Id
      parameters: 
       - name: id
         in: path
         required: true
         description: The games Id
         type: integer
       - name: Player1
         in: query
         description: Player 1 name
         type: string
         required: true
       - name: Player2
         in: query
         description: Player 2 name
         type: string
         required: true
       - name: Player3
         in: query
         description: Player 3 name
         type: string
       - name: Player4
         in: query
         description: Player 4 name
         type: string
       - name: Score1
         in: query
         description: The score for Player 1 ( also Player 1 and Player 2 when playing Doubles) 
         type: integer
       - name: Score2
         in: query
         description: The score for Player 2 ( also Player 3 and Player 4 when playing Doubles) 
         type: integer   
          
      responses:
        200:
          description: A list of Person
    get:
      summary: Gets all games
      description: Returns a list of all played games.
      parameters: 
        - name: id
          in: path
          required: true
          description: The games Id
          type: integer
      responses:
        200:
          description: A list of all played games
          schema:
            type: array
            items:
              required:
                - Player1
                - Player2
              properties:
                Id:
                  type: integer
                Player1:
                  type: string
                Player2:
                  type: string
                Player3:
                  type: string
                Player4:
                  type: string  
                Score1:
                  type: integer
                Score2:
                  type: integer
                Time:
                  type: string
                  format: date-time
    delete:
      summary: Deletes game by Id
      description: Deletes the game that matches the passed Id
      parameters: 
        - name: id
          in: path
          required: true
          description: The games Id
          type: integer
      responses:
        200:
          description: OK
  /games/ByUser/{name}:
    get:
      summary: Get games played by Player
      description: Returns a list of all played games by the supplied Player Name.
      parameters: 
        - name: name
          in: path
          required: true
          description: The users name
          type: string
      responses:
        200:
          description: A list of all played games
          schema:
            type: array
            items:
              required:
                - Player1
                - Player2
              properties:
                Id:
                  type: integer
                Player1:
                  type: string
                Player2:
                  type: string
                Player3:
                  type: string
                Player4:
                  type: string  
                Score1:
                  type: integer
                Score2:
                  type: integer
                Time:
                  type: string
                  format: date-time